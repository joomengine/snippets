{
    "name": "Custom - Checkbox",
    "url": "https:\/\/getbootstrap.com\/docs\/4.0\/components\/forms\/#custom-forms",
    "type": "b101b15b-dbad-4884-bd22-bd4270f97b35",
    "heading": "custom-checkbox",
    "library": "6f6650a5-ebff-4783-8508-f0285c0e98a6",
    "guid": "66e25b4d-b321-4a57-8421-95fff6769841",
    "contributor_email": "sales@mwweb.host",
    "contributor_name": "Steve Voorhees",
    "contributor_website": "https:\/\/mostwantedwebhosting.com",
    "contributor_company": "Most Wanted Web Services, Inc.",
    "snippet": "<label class=\"custom-control custom-checkbox\">\r\n  <input type=\"checkbox\" class=\"custom-control-input\">\r\n  <span class=\"custom-control-indicator\"><\/span>\r\n  <span class=\"custom-control-description\">Check this custom checkbox<\/span>\r\n<\/label>",
    "usage": "Each checkbox and radio is wrapped in a  for three reasons:\r\n\r\n    It provides a larger hit areas for checking the control.\r\n    It provides a helpful and semantic wrapper to help us replace the default s.\r\n    It triggers the state of the  automatically, meaning no JavaScript is required.\r\n\r\nWe hide the default  with opacity and use the .custom-control-indicator to build a new custom form indicator in its place. Unfortunately we can\u2019t build a custom one from just the  because CSS\u2019s content doesn\u2019t work on that element.\r\n\r\nWe use the sibling selector (~) for all our  states\u2014like :checked\u2014to properly style our custom form indicator. When combined with the .custom-control-description class, we can also style the text for each item based on the \u2019s state.\r\n\r\nIn the checked states, we use base64 embedded SVG icons from Open Iconic. This provides us the best control for styling and positioning across browsers and devices.",
    "description": "For even more customization and cross browser consistency, use our completely custom form elements to replace the browser defaults. They\u2019re built on top of semantic and accessible markup, so they\u2019re solid replacements for any default form control.",
    "@dependencies": [
        {
            "key": "guid",
            "value": "b101b15b-dbad-4884-bd22-bd4270f97b35",
            "entity": "snippet_type",
            "table": "#__componentbuilder_snippet_type",
            "direction": "out"
        },
        {
            "key": "guid",
            "value": "6f6650a5-ebff-4783-8508-f0285c0e98a6",
            "entity": "library",
            "table": "#__componentbuilder_library",
            "direction": "out"
        }
    ]
}